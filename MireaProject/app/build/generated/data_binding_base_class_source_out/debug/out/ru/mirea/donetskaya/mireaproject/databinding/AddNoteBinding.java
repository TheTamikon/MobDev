// Generated by view binder compiler. Do not edit!
package ru.mirea.donetskaya.mireaproject.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ru.mirea.donetskaya.mireaproject.R;

public final class AddNoteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView textNoteName;

  @NonNull
  public final TextView textNoteText;

  @NonNull
  public final EditText txtEditNoteName;

  @NonNull
  public final EditText txtEditNoteText;

  private AddNoteBinding(@NonNull ConstraintLayout rootView, @NonNull TextView textNoteName,
      @NonNull TextView textNoteText, @NonNull EditText txtEditNoteName,
      @NonNull EditText txtEditNoteText) {
    this.rootView = rootView;
    this.textNoteName = textNoteName;
    this.textNoteText = textNoteText;
    this.txtEditNoteName = txtEditNoteName;
    this.txtEditNoteText = txtEditNoteText;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddNoteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddNoteBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_note, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddNoteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.textNoteName;
      TextView textNoteName = ViewBindings.findChildViewById(rootView, id);
      if (textNoteName == null) {
        break missingId;
      }

      id = R.id.textNoteText;
      TextView textNoteText = ViewBindings.findChildViewById(rootView, id);
      if (textNoteText == null) {
        break missingId;
      }

      id = R.id.txtEditNoteName;
      EditText txtEditNoteName = ViewBindings.findChildViewById(rootView, id);
      if (txtEditNoteName == null) {
        break missingId;
      }

      id = R.id.txtEditNoteText;
      EditText txtEditNoteText = ViewBindings.findChildViewById(rootView, id);
      if (txtEditNoteText == null) {
        break missingId;
      }

      return new AddNoteBinding((ConstraintLayout) rootView, textNoteName, textNoteText,
          txtEditNoteName, txtEditNoteText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
